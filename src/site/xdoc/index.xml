<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is free and unencumbered software released into the public domain.
  ~
  ~ Anyone is free to copy, modify, publish, use, compile, sell, or
  ~ distribute this software, either in source code form or as a compiled
  ~ binary, for any purpose, commercial or non-commercial, and by any
  ~ means.
  ~
  ~ In jurisdictions that recognize copyright laws, the author or authors
  ~ of this software dedicate any and all copyright interest in the
  ~ software to the public domain. We make this dedication for the benefit
  ~ of the public at large and to the detriment of our heirs and
  ~ successors. We intend this dedication to be an overt act of
  ~ relinquishment in perpetuity of all present and future rights to this
  ~ software under copyright law.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  ~ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  ~ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ~ IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
  ~ OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
  ~ ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  ~ OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ For more information, please refer to <http://unlicense.org/>
  -->

<document>
    <properties>
        <title>graniteit-maven-plugin</title>
    </properties>
    <body>
        <section name="graniteit-maven-plugin">
            <p>
                The graniteit-maven-plugin is a tool for developers of Adobe CQ/CRX/Granite-based applications to
                create content package artifacts from vlt working copies.
            </p>
            <subsection name="CRX Content Package Creation">
                <p>
                    Developers might use
                    <a href="http://dev.day.com/docs/en/crx/current/how_to/how_to_use_the_vlttool.html">Adobe's VLT tool</a>
                    to develop their application content, code, and configuration in their local Granite instance, and then
                    create CRX content packages to deploy that content, code, and configuration to shared repositories and
                    production CRX servers.
                </p>
                <p>
                    The graniteit-maven-plugin defines a "content-package-it" packaging type which is an enhanced version
                    of the content-package lifecycle. It provides a set of maven goals mapped to the pre-integration-test
                    and post-integration-test phases of the default lifecycle (<tt>compile</tt>, <tt>test</tt>,
                    <tt>package</tt>, <tt>install</tt>, <tt>deploy</tt>), and maps the integration-test and verify goals
                    of the maven-failsafe-plugin to their appropriate phases as well.
                </p>
            </subsection>
            <subsection name="Integration Test Support">
                <p>
                    In addition to the basic package creation goals, a number of goals have been provided to support the use
                    of the maven-failsafe-plugin for execution of integration tests based on the
                    <a href="http://sling.apache.org/site/sling-testing-tools.html">Sling JUnit Framework</a>.
                    These are all mapped to the <tt>pre-integration-test</tt> phase so that they may be easily executed
                    immediately prior to the execution of the maven-failsafe-plugin's <tt>integration-test</tt> goal. Simply
                    use a profile to set the <tt>supportITs</tt> user property to enable the following goals:
                </p>
                <dl>
                    <dt><a href="upload-content-package-mojo.html">upload-content-package</a></dt>
                    <dd>Uploads the content-package-it project artifact to the configured CRX server</dd>
                    <dt><a href="upload-tests-mojo.html">upload-tests</a></dt>
                    <dd>Uploads packages and bundles to prepare the CRX server for execution of integration tests</dd>
                    <dt><a href="wait-for-server-mojo.html">wait-for-server</a></dt>
                    <dd>Causes the build to wait for server readiness by repeatedly pinging it at the configured path and
                        checking the response for a specific substring</dd>
                    <dt><a href="set-http-properties-mojo.html">set-http-properties</a></dt>
                    <dd>Exports the configured HTTP connection parameters as System properties for classes executed by the
                        maven-failsafe-plugin during the <tt>integration-test</tt> phase.</dd>
                </dl>
            </subsection>
            <subsection name="Design Priorities">
                <ul>
                    <li>
                        Support a test-driven maven lifecycle using the
                        <a href="Sling JUnit Framework">Sling JUnit integration test framework</a>.
                        Bundle and package deployment goals are mapped to the pre-integration-test phase (not the install
                        phase) so that maven install and deploy phases can be made dependent on successful test execution.
                    </li>
                    <li>
                        Provide a consistent configuration model such that any two maven goals that do similar things
                        will accept a similar set of configuration parameters/property names.
                    </li>
                    <li>
                        Support an iterative development process for the package artifact itself by exposing convenient
                        property names for configuration values that are likely to vary for local development, so that
                        maven profiles and command-line scripts may be reused across modules and across projects.
                    </li>
                </ul>
            </subsection>
            <subsection name="Requirements">
                <ul>
                    <li>Maven 3.0+</li>
                    <li>JDK 1.6+</li>
                    <li>
                        <strong>
                            graniteit-maven-plugin will only work when used in conjunction with the proprietary
                            content-package-maven-plugin, which is available in the
                            public <a href="http://repo.adobe.com/">Adobe Nexus repository</a>
                        </strong>
                    </li>
                </ul>
            </subsection>
        </section>
    </body>
</document>
